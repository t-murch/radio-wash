name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create test database auth schema
      run: |
        docker compose -f docker-compose.test.yml up test-db -d
        # Wait for database to be ready
        timeout 60s bash -c 'until docker exec radiowash-test-db pg_isready -U postgres; do sleep 2; done'
        # Create auth schema for Supabase compatibility
        docker exec radiowash-test-db psql -U postgres -d radiowash_test -c "CREATE SCHEMA IF NOT EXISTS auth; CREATE TABLE IF NOT EXISTS auth.users (id UUID PRIMARY KEY DEFAULT gen_random_uuid(), email TEXT UNIQUE, raw_user_meta_data JSONB, created_at TIMESTAMPTZ DEFAULT NOW(), updated_at TIMESTAMPTZ DEFAULT NOW());"

    - name: Run integration tests
      run: |
        docker compose -f docker-compose.test.yml up test-runner --build --abort-on-container-exit
      env:
        # Test Supabase Configuration (from repository secrets)
        TEST_SUPABASE_URL: ${{ secrets.TEST_SUPABASE_URL || 'http://localhost:54321' }}
        TEST_SUPABASE_PUBLIC_URL: ${{ secrets.TEST_SUPABASE_PUBLIC_URL || 'http://localhost:54321' }}
        TEST_SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.TEST_SUPABASE_SERVICE_ROLE_KEY || 'test-service-role-key' }}
        TEST_SUPABASE_ANON_KEY: ${{ secrets.TEST_SUPABASE_ANON_KEY || 'test-anon-key' }}
        TEST_SUPABASE_JWT_SECRET: ${{ secrets.TEST_SUPABASE_JWT_SECRET || 'test-jwt-secret-key-exactly-32-chars' }}
        TEST_SUPABASE_JWT_ISSUER: ${{ secrets.TEST_SUPABASE_JWT_ISSUER || 'test-issuer' }}

    - name: Cleanup
      if: always()
      run: docker compose -f docker-compose.test.yml down -v